			      EE 109  - Fall 2022
				  Speed Trap


Checkpoint 1:

1.  Splash screen with your name shown at start.

2.  Sensors start and stop timing.  If a measurement is started but not
    completed after 4 sec, the measurement is terminated and a message shown on
    the LCD.

3.  Elapsed time and speed displayed properly.  The elapsed time is shown to 1
    ms precision and the calculation of the speed based on the time delay
    between the sensors is correct and is shown to a precision of 0.1 cm/sec.

4.  The LED timing indicator operates properly, going on at the start of a
    timing event and off when it is complete.

5.  Rotary encoder can adjust threshold between 1 and 99 cm/sec.

6.  Buzzer sounds warning if speed measured on the local device is above the
    speed set with the rotary encoder.

Checkpoint 2:

1.  The servo motor adjusts the indicator to correctly point at speed that was
    measured on the local device.

2.  The maxium speed threshold is stored in EEPROM and retrieved when
    restarted.

3.  After a speed measurement is complete the device sends local speed to
    remote device over the serial link.

4.  Device can receive a speed from the remote device and displays it on LCD
    with 0.1 cm/sec precision.

5.  The red and green LEDs operate to show how the local and remote speeds
    compare.



Review Question 1 (Cost Analysis):

Assume we are building 1000 units of this system.  Use the provided part
numbers (see the webpage) and the digikey.com or jameco.com website to find the
total **cost per unit** (again assume we build a quantity of 1000 units) for
these speed traps.  Itemize the part costs (list each part and its unit cost
when bought in units of 1000) and then show the final cost per unit below.
Note: You only need to price the components used in the project (not all the
components in your lab kit.  Also, you do not need to account for the cost of
the circuit board or wires. In a real environment we would manufacture a PCB
(Printed Circuit Board). As an optional task, you can search online for PCB
manufacturers and what the costs and options are in creating a PCB.


Inverter - $250 for 1000
Servo Motor - $4775 for 1000
Phototransistors - $2200 for 2000
Rotary Encoder - $2,250 for 1000
Rotary Encoder Knob - $900 for 1000
3 resistors 
    1. 240 - $10 for 1000 resistors * 2
    2. 680 - $10 for 1000 resistors * 3
    3. 1.3K - $10for 1000 resistors * 3
LEDs - $100 for 100, $85 for 1000, $110 for 1000, $450 for 2000
LCD - $10 * 1000 = $10000
Arduino - $25 * 1000 = $25000
Buzzer - $500 for 1000
Total = $51,375


Review Question 2 (Health/Safety/Reliability)

Assume this system was to be sold to consumers for use at their home.

Considering reliability, health, and safety...

 - What scenarios might you suggest testing (considering both HW and SW) 
    before releasing the product for use? 




 - How might you make your design more reliable? By reliability we don't just
   mean keeping it running correctly (though you should consider that), but
   also how you can detect that a connected component has failed to gracefully
   handle such situations.  You can consider both HW and SW points of failure,
   issues related to the operational environment, etc. and how to mitigate
   those cases.

   In terms of software, I would catch and throw exceptions, for instance, asking the user if they want to run the application if it hasn't detected the LED start for a long. I would reduce the number of pins and wires utilized in hardware to reduce the amount of board space needed.
   For hardware, I would do a toxicology test on the metals and components used in the boards. A way to maintain the circuit boards free of debris so that they can continue to function correctly would also be tested, along with battery life and rebooting the software to address any errors. If the user pushes any of the LCD buttons, as well as checking the software's ability to recognize whether any of the hardware is unplugged, are scenarios for SW that I would take into consideration.






